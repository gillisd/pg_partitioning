= PgPartitioning

{<img src="https://codeclimate.com/github/victor-magarlamov/pg_partitioning/badges/gpa.svg" />}[https://codeclimate.com/github/victor-magarlamov/pg_partitioning]

This project rocks and uses MIT-LICENSE.

== Install

Put this line in your Gemfile:
  gem 'pg_partitioning'

Then bundle:
  % bundle install

== Usage

  RAILS_ENV=production rails g partitioning

1) Select the partitioning mode:
* by single column +value+
* by dates +template+
* by +range+

2) Enter +table+ name.

3) Enter +column+ name.

4) Enter condition depending on the selected mode - template +pattern+ or range +step+.

What will happen then...

1) The generator will create two triggers: before insert and after insert. The before insert trigger executes the procedure that created nested table and inserts a new record into it. The after trigger clears the master table.

2) The generator will delete foreign keys which reference to the master table.

For more details, see ...

== Examples



